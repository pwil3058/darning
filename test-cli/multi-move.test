### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
### GNU General Public License for more details.
###
### You should have received a copy of the GNU General Public License
### along with this program; if not, write to the Free Software
### Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Test the 'darn move' command.

Create some test files.
$ darn_test_tree create

Make a playground and patch
$ darn init --legacy
$ darn new first
$ darn add file4
> file4: file added to patch "first".
$ darn_test_tree modify file4

Try to move a single nonexistent file
$ darn move nonexistent nonexistent.moved
? 2
! nonexistent: file does not exist.
$ darn move nonexistent file1
? 2
! nonexistent: file does not exist.
$ darn move nonexistent file4
? 2
! nonexistent: file does not exist.

Try to move a two nonexistent file
$ darn move nonexistent1 nonexistent2 dir1
? 2
! nonexistent1: file does not exist.
! nonexistent2: file does not exist.
$ darn move nonexistent1 nonexistent2 file1 dir1
? 2
! nonexistent1: file does not exist.
! nonexistent2: file does not exist.
$ darn move nonexistent1 nonexistent2 file1
? 2
! file1: target must be a directory for multiple file move operation.

Try move two files to an existing directory without --overwrite
$ darn move file1 file2 dir1
? 34
! dir1/file1: file already exists.
! dir1/file2: file already exists.

Try move two files to a nonexistent directory without --mkdir
$ darn move file1 file2 newdir
? 2
! newdir: does not exist. Use --mkdir to create it.

Try move two files to a nonexistent directory with --mkdir
$ darn move --mkdir file1 file2 newdir
> file1: file added to patch "first".
> file1: file renamed to "newdir/file1" in patch "first".
> file2: file added to patch "first".
> file2: file renamed to "newdir/file2" in patch "first".
$ darn files
> -:+: file1 -> newdir/file1
> -:+: file2 -> newdir/file2
>  :?: file4
> +:+: newdir/file1 <- file1
> +:+: newdir/file2 <- file2
$ darn diff
> diff --git a/file1 b/file1
> # Renamed to: newdir/file1
> diff --git a/file2 b/file2
> # Renamed to: newdir/file2
> diff --git a/file4 b/file4
> --- a/file4
> +++ b/file4
> @@ -1 +1,2 @@
>  file4: is a text file.
> +Patch: "first"; Path: "file4"
> diff --git a/file1 b/newdir/file1
> rename from file1
> rename to newdir/file1
> diff --git a/file2 b/newdir/file2
> rename from file2
> rename to newdir/file2

Try move two files to an existing directory with --overwrite
$ darn move --overwrite file3 file4 dir1
> file3: file added to patch "first".
> file3: file renamed to "dir1/file3" in patch "first".
> file4: file renamed to "dir1/file4" in patch "first".
$ darn files
>  :+: dir1/file3 <- file3
>  :?: dir1/file4 <- file4
> -:+: file1 -> newdir/file1
> -:+: file2 -> newdir/file2
> -:+: file3 -> dir1/file3
> -:+: file4 -> dir1/file4
> +:+: newdir/file1 <- file1
> +:+: newdir/file2 <- file2
$ darn diff
> diff --git a/file3 b/dir1/file3
> rename from file3
> rename to dir1/file3
> diff --git a/file4 b/dir1/file4
> rename from file4
> rename to dir1/file4
> --- a/file4
> +++ b/dir1/file4
> @@ -1 +1,2 @@
>  file4: is a text file.
> +Patch: "first"; Path: "file4"
> diff --git a/file1 b/file1
> # Renamed to: newdir/file1
> diff --git a/file2 b/file2
> # Renamed to: newdir/file2
> diff --git a/file3 b/file3
> # Renamed to: dir1/file3
> diff --git a/file4 b/file4
> # Renamed to: dir1/file4
> diff --git a/file1 b/newdir/file1
> rename from file1
> rename to newdir/file1
> diff --git a/file2 b/newdir/file2
> rename from file2
> rename to newdir/file2

Pop back to start and check everything returned properly
$ darn refresh
$ darn pop
> There are now no patches applied.
$ ls newdir
$ cat file1
> file1: is a text file.
$ cat file2
> file2: is a text file.
$ cat file3
> file3: is a text file.
$ cat file4
> file4: is a text file.
$ cat dir1/file3
> dir1/file3: is a text file.
$ cat dir1/file4
> dir1/file4: is a text file.

Push the patch back and check that it applied OK
$ darn push
> Processing file "file3".
> Processing file "file2".
> Processing file "file1".
> Processing file "file4".
> Processing file "newdir/file1".
> Processing file "newdir/file2".
> Processing file "dir1/file3".
> Patching file "dir1/file4".
> Patch "first" is now on top.
$ darn files
>  :+: dir1/file3 <- file3
>  :+: dir1/file4 <- file4
> -:+: file1 -> newdir/file1
> -:+: file2 -> newdir/file2
> -:+: file3 -> dir1/file3
> -:+: file4 -> dir1/file4
> +:+: newdir/file1 <- file1
> +:+: newdir/file2 <- file2
$ darn diff
> diff --git a/file3 b/dir1/file3
> rename from file3
> rename to dir1/file3
> diff --git a/file4 b/dir1/file4
> rename from file4
> rename to dir1/file4
> --- a/file4
> +++ b/dir1/file4
> @@ -1 +1,2 @@
>  file4: is a text file.
> +Patch: "first"; Path: "file4"
> diff --git a/file1 b/file1
> # Renamed to: newdir/file1
> diff --git a/file2 b/file2
> # Renamed to: newdir/file2
> diff --git a/file3 b/file3
> # Renamed to: dir1/file3
> diff --git a/file4 b/file4
> # Renamed to: dir1/file4
> diff --git a/file1 b/newdir/file1
> rename from file1
> rename to newdir/file1
> diff --git a/file2 b/newdir/file2
> rename from file2
> rename to newdir/file2
