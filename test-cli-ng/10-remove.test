### Copyright (C) 2011 Peter Williams <peter_ono@users.sourceforge.net>
###
### This program is free software; you can redistribute it and/or modify
### it under the terms of the GNU General Public License as published by
### the Free Software Foundation; version 2 of the License only.
###
### This program is distributed in the hope that it will be useful,
### but WITHOUT ANY WARRANTY; without even the implied warranty of
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
### GNU General Public License for more details.
###
### You should have received a copy of the GNU General Public License
### along with this program; if not, write to the Free Software
### Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Test the 'darn remove' command.

Test removing a patch when not in a playground.
$ darn remove first
? 1
! Valid database NOT found.

Set up a playground with three patches
$ darn init --ng
$ darn new first
$ darn new second
$ darn new third
$ darn series
> +: first
> +: second
> +: third
$ darn validate

Test removing a nonexistent patch
$ darn remove nonexistent
? 2
! nonexistent: patch is NOT known.

Test removing an applied patches
$ darn remove first
? 2
! first: patch is applied and cannot be removed.
$ darn remove second
? 2
! second: patch is applied and cannot be removed.
$ darn remove third
? 2
! third: patch is applied and cannot be removed.
$ darn series
> +: first
> +: second
> +: third
$ ls .darning.dbd/retained_patches

Pop two patches
$ darn pop
> Patch "second" is now on top.
$ darn pop
> Patch "first" is now on top.
$ darn series
> +: first
>  : second
>  : third
$ ls .darning.dbd/retained_patches

Remove a patch in the middle of the series
$ darn diff --patch second
$ darn remove second
> Patch "second" removed (but available for restoration).
$ darn series
> +: first
>  : third
$ ls .darning.dbd/retained_patches
> second
$ cat .darning.dbd/retained_patches/second

Remove a patch in the end of the series
$ darn diff --patch third
$ darn remove third
> Patch "third" removed (but available for restoration).
$ darn series
> +: first
$ ls .darning.dbd/retained_patches
> second
> third
$ cat .darning.dbd/retained_patches/second

Now start testing removal of non empty patches
$ darn_test_tree create
$ darn add file1 file2 dir1/file1 dir2/file2 > /dev/null
$ darn move --mkdir file3 file4 newdir > /dev/null
$ darn validate
$ darn refresh
$ darn new second --descr "second patch"
$ darn add file2 file5 dir3/file4 > /dev/null
$ darn_test_tree modify file2 dir3/file4
$ darn validate
$ darn refresh
$ darn validate
$ darn new third --descr "third patch"
$ darn add file2 file5 dir5/file1 dir5/file2 dir2/file3 newdir/file3 newdir/file4 > /dev/null
$ darn_test_tree modify file2 file5 dir5/file1 dir5/file2 dir2/file3 newdir/file3 newdir/file4
$ darn refresh
$ darn validate
$ darn new fourth --descr "fourth patch"
$ darn add file2 file5 dir5/file1 dir5/file2 dir2/file3 newdir/file3 newdir/file4 > /dev/null
$ darn_test_tree modify file2 file5 dir5/file1 dir5/file2 dir2/file3 newdir/file3 newdir/file4
$ darn refresh
$ darn validate
$ darn new fifth --descr "fifth patch"
$ darn add file2 file5 dir5/file1 dir5/file2 dir2/file3 newdir/file3 newdir/file4 > /dev/null
$ darn_test_tree modify file2 file5 dir5/file1 dir5/file2 dir2/file3 newdir/file3 newdir/file4
$ darn refresh
$ darn validate

$ darn pop
> Patch "fourth" is now on top.
$ darn validate
$ darn pop
> Patch "third" is now on top.
$ darn validate
$ darn pop
> Patch "second" is now on top.
$ darn validate
$ darn pop
> Patch "first" is now on top.
$ darn validate
$ darn pop
> There are now no patches applied.
$ darn validate

$ darn remove second
> Patch "second" removed (but available for restoration).
$ darn validate
$ darn series
>  : first
>  : third
>  : fourth
>  : fifth
$ cat .darning.dbd/retained_patches/second
> second patch
> diff --git a/dir3/file4 b/dir3/file4
> index 426a67e8158e8f29f8f1ce64551b3f1dd745d9af..31ad731a63455372d037e05aa3e6ad642b916f7b 0100664
> --- a/dir3/file4
> +++ b/dir3/file4
> @@ -1 +1,2 @@
>  dir3/file4: is a text file.
> +Patch: "second"; Path: "dir3/file4"
> diff --git a/file2 b/file2
> index cd1c1e8e36a212ba7723de693b194e58acab54ae..00c55dd55bb971b92c078bee4b75df30999295fc 0100664
> --- a/file2
> +++ b/file2
> @@ -1 +1,2 @@
>  file2: is a text file.
> +Patch: "second"; Path: "file2"
> diff --git a/file5 b/file5
> index aac29970b8c49d0c9414043c72b15cbcc0732f04..aac29970b8c49d0c9414043c72b15cbcc0732f04 0100664

$ darn remove third
> Patch "third" removed (but available for restoration).
$ darn validate
$ darn series
>  : first
>  : fourth
>  : fifth

$ darn remove fifth
> Patch "fifth" removed (but available for restoration).
$ darn validate
$ darn series
>  : first
>  : fourth

$ darn remove fourth
> Patch "fourth" removed (but available for restoration).
$ darn validate
$ darn series
>  : first

$ darn remove first
> Patch "first" removed (but available for restoration).
$ darn validate
$ darn series
$ ls .darning.dbd/retained_patches
> fifth
> first
> fourth
> second
> third
